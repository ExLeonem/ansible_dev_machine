- hosts: localhost
  become: true
  roles:
    - weareinteractive.users_oh_my_zsh
  vars:
    users:
      - name: Username
        username: "{{lookup('env', 'USER')}}"
        authorized_keys: []
        oh_my_zsh:
          theme: agnoster
  

  tasks:
    - name: install various packages git, curl, firacode, docker
      apt: name="{{item}}"
      with_items:
        - git
        - curl
        - fonts-firacode
        - docker.io
        - docker-compose


    - name: create default folder structure
      file:
        path: "{{ item }}"
        owner: '{{lookup("env", "USER")}}'
        mode: 774
        state: directory
      loop:
        - '{{lookup("env", "HOME")}}/Desktop/projects'
        - '{{lookup("env", "HOME")}}/Desktop/studium'


   # Install tools & languages 
    - name: configure zsh to allow jumps with strg(ctrl) + left/right arrow
      become_user: root
      shell: |
        echo 'bindkey "^[[1;5C" forward-word' >> '{{lookup("env", "HOME")}}/.zshrc'
        echo 'bindkey "^[[1;5D" backward-word' >> '{{lookup("env", "HOME")}}/.zshrc'
     
 
    # Required packages for elxiir, erlang and nodejs
    - name: install requirements for programming languages
      apt: name="{{item}}"
      with_items:
        - build-essential
        - autoconf
        - m4
        - libncurses5-dev
        - libssh-dev
        - xsltproc 
        - fop
        - unixodbc-dev
        - unzip
        - dirmngr
        - gpg

    - name: install programming languages
      include_role:
        name: particledecay.asdf
      vars:
        asdf_plugins:
          - name: erlang
            versions:
              - "22.3.3" 
            global: "22.3.3"
          - name: elixir
            versions:
              - "1.10.3"
            global: "1.10.3"
          # - name: nodejs
          #   versions:
          #     - "14.0.0"
          #   global: "14.0.0"

            ### Eventually extend with more programing languages


    # Uncomment to enable use in zsh
    # - name: configure zsh to use asdf
    #   shell: |
    #     echo '. $HOME/.asdf/asdf.sh' >> {{lookup("env", "HOME")}}/.zshrc

    - name: installing anaconda
      import_role:
        name: crivetimihai.anaconda
      vars:
        anaconda_url: "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh"
        anaconda_path: "{{lookup('env', 'HOME')}}/.anaconda3"
        anaconda_user: "{{lookup('env', 'USER')}}"
      tags: anaconda
  
  # Install development mandatory applications
    - name: install vs-code
      become_user: root
      shell: |
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg     
        install -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/
        sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'
        apt-get install apt-transport-https
        apt-get update
        apt-get install code


    - name: install vs-code extensions
      become_user: '{{lookup("env", "USER")}}'
      shell: |
        code --install-extension ahmadawais.shades-of-purple
        code --install-extension sdras.night-owl
        code --install-extension nickdodd79.gulptasks
        code --install-extension mjmcloug.vscode-elixir
        code --install-extension dsznajder.es7-react-js-snippets


    - name: enable docker to run services at startup 
      become_user: root
      shell: |
        systemctl start docker
        systemctl enable docker